---
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import PostCard from '../../../../components/PostCard.astro';
import Pagination from '../../../../components/Pagination.astro';
import { getCategories, getPostsByCategory, PAGE_SIZE } from '../../../../lib/wp';

// 预生成每个分类的分页静态路径
export async function getStaticPaths() {
  const cats = await getCategories();
  return cats.flatMap((c) => {
    const totalPages = Math.max(1, Math.ceil((c.count ?? 0) / PAGE_SIZE));
    return Array.from({ length: totalPages }, (_, i) => ({
      params: { slug: c.slug, page: String(i + 1) },
    }));
  });
}

// 分类 slug -> id 与当前页
const slug = Astro.params.slug!;
const page = Number(Astro.params.page || '1');
const cats = await getCategories();
const cat = cats.find((c) => c.slug === slug);
const catId = cat?.id;

const { posts, totalPages } = catId
  ? await getPostsByCategory(catId, page, PAGE_SIZE)
  : { posts: [], totalPages: 1 };
---

<BaseLayout title={cat ? `分类：${cat.name}` : '分类未找到'} description={cat ? `包含 ${cat.count ?? 0} 篇文章` : '未找到该分类'}>
  {cat ? (
    <>
      {posts.length === 0 ? (
        <p class="text-xs antialiased opacity-60 py-1">此分类暂无文章</p>
      ) : (
        posts.map((post) => <PostCard post={post} />)
      )}
      <Pagination current={page} totalPages={totalPages} base={`/category/${slug}/page`} />
    </>
  ) : (
    <p class="empty">未找到该分类</p>
  )}
</BaseLayout>
